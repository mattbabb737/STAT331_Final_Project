---
title: "STAT331_Final_Project"
author: "Justus Nunez, Daniel Alvarez, Matt Babb, Maya Doitch"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
editor: visual
self-contained: true
code-fold: true
message: false
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

## I. Introduction

This report investigated the relationship between child mortality and carbon dioxide emissions per capita over the years of 1800 – 2022. Two data sets were acquired from Gapminder, which is an organization that seeks to educate the world’s transmitters of information with up-to-date facts about many metrics of health, infrastructure, sustainability, and many other crucial topics.

The first data set, called `child_mortality_data`, lists the rates of child death under the age of five per 1,000 births from 197 countries (data begins at 1950 for 12 countries). Each observation corresponds to a single country, and each variable is one year.

The second data set, called `co2_pcap_cons`, tracks tonnes (metric) of carbon dioxide emissions per capita for 194 countries. There are no NA values in this data set. Each observation corresponds to a single country, and each variable is one year.

The hypothesized relationship between the two variables is that as the amount of CO2 emissions per capita increases for a country, its child mortality rate will drop. While we are not investigating causality, we anticipate that increased CO2 emissions indicate increasing industrialization and modernization within a country, which tends to predict dropping levels of child mortality (Ranganathan et al., 2015).

```{r results='hide', message=FALSE, warning=FALSE}

# Load in packages and .csv files

library(tidyverse)
library(broom)

child_mortality_data <- read.csv(here::here("child_mortality_0_5_year_olds_dying_per_1000_born.csv"))

co2_pcap_cons <- read.csv(here::here("co2_pcap_cons.csv"))

```


## II. Methods

### Data cleaning

After loading the necessary packages and reading in the two *Gapminder* files, both data sets were cleaned for ease of analysis. Each data set had its year variables re-designated as characters to standardize the variable type. The X’s in front of each year (carried over from *Gapminder*) were removed, and each year was then re-designated as a numeric type. Each data set was then pivoted into a long format so that each observation corresponded to a single country for a single year, along with their respective child_mortality and emissions values. These two data sets were named child_mort_long and co2_long.

Finally, these two cleaned data sets were joined into one data set called final_data, which includes both child_mortality and emissions values for 194 countries over the years of 1800 – 2022.

```{r}

# Convert co2_pcap_cons into long format

co2_long <- co2_pcap_cons %>%
  mutate(across(matches("^X(18|19|20)\\d{2}$"), as.character)) %>% 
  pivot_longer(
    cols = matches("^X(18|19|20)\\d{2}$"), 
    names_to = "year",
    values_to = "emissions"
  ) %>%
  mutate(
    year = str_remove(year, "^X"),
    year = as.numeric(year)
  )


# Convert child_mortality_data into long format

child_mort_long <- child_mortality_data %>%
  mutate(across(matches("^X(18|19|20|21)\\d{2}$"), as.character)) %>% 
  pivot_longer(
    cols = matches("^X(18|19|20|21)\\d{2}$"), 
    names_to = "year",
    values_to = "child_mortality"
  ) %>%
  mutate(
    year = str_remove(year, "^X"),
    year = as.numeric(year)
  )


# Join the data sets

final_data <- child_mort_long %>%
  inner_join(co2_long, by = c("year", "country")) %>%
  mutate(
    child_mortality = as.numeric(as.character(child_mortality)),
    emissions = as.numeric(as.character(emissions))
  )

```

### Exploratory Analysis

In order to get a sense of how these two variables relate over time, child_mortality and emissions (log transformed) for each country were averaged for each decade starting from the year 1953 through the year 2022. A new variable called Decade was created for this purpose. The resulting mean values are represented in the faceted plot below. Each point represents the mean values over a decade of `child_mortality` and `emissions` per capita for a single country. 

```{r}
final_data <- final_data %>%
  mutate(Decade = cut(year, breaks = seq(1953, 2023, 10), 
                      labels = c("1953-1962", "1963-1972",
                                 "1973-1982", "1983-1992",
                                 "1993-2002", "2003-2012",
                                 "2013-2022"),
                      include.lowest = TRUE))


final_data_means <- final_data %>%
  filter(!is.na(Decade)) %>%
  group_by(country, Decade) %>%
  summarize(
    mean_emissions = mean(emissions, na.rm = TRUE),
    mean_child_mortality = mean(child_mortality, na.rm = TRUE),
    .groups = 'drop'
  )


ggplot(final_data_means, aes(x = mean_emissions,
                             y = mean_child_mortality)) +
  geom_point() +
  facet_wrap(Decade ~ ., scales = "free") + 
  labs(title = "Mean Child Mortality vs. Mean Emissions Over Decades (1953 - 2022)",
       x = "Mean Emissions Per Capita (Log Transformed)",
       y = "") +
  scale_x_log10() +
  theme_bw()
```

Each facet in the above plot clearly shows that the global correlation between `child_mortality` and `emissions` is negative in every decade since 1953. This consistent pattern supports the hypothesis of an inverse relationship between these variables and provides a solid foundation for further analysis.

## III. Analysis

### Linear Regression

To further assess the relationship between mean_child_mortality and mean_emissions, a scatterplot was created with each point representing both values for each country averaged across all years in the final_data set. A line of best fit was overlaid, showing a clear negative correlation. This suggests that, on average, countries with higher emissions tend to have lower child mortality rates, or vice versa. 

```{r}
final_data %>%
  group_by(country) %>%
  summarise(
    mean_child_mortality = mean(child_mortality, na.rm = TRUE),
    mean_emissions = mean(emissions, na.rm = TRUE)
  ) %>%
  ggplot(aes(x = mean_emissions, y = mean_child_mortality)) +
  geom_point() +
  theme_bw() +
  labs(x = "Mean Emissions (Log Transformed)", y = "", 
       title = "Scatter Plot of Mean Child Mortality vs Mean Emissions by Country") +
  geom_smooth(method = "lm", color = "blue") +
  scale_x_log10()

```


```{r}
final_data %>%
  group_by(year) %>%
  summarise(
    mean_child_mortality = mean(child_mortality, na.rm = TRUE),
    mean_emissions = mean(emissions, na.rm = TRUE)
  ) %>%
  mutate(period = 25 * floor((year - 1800) / 25) + 1800) %>%
  ggplot(aes(x = mean_emissions, y = mean_child_mortality, color = as.factor(period))) +
  geom_point() +
  theme_bw() +
  labs(x = "Mean Emissions (Log Transformed)", y = "Mean Child Mortality",
       title = "Scatter Plot of Mean Child Mortality vs Mean Emissions by Period",
       color = "Period") +
  geom_smooth(method = "lm", color = "blue") +
  scale_x_log10() +
  scale_color_viridis_d()
```


```{r}

yearly_means <- final_data %>%
  group_by(year) %>%
  summarise(
    mean_child_mortality = mean(child_mortality, na.rm = TRUE),
    mean_emissions = mean(emissions, na.rm = TRUE)
  )

```


## Linear Model

Our explanatory variable is `mean_emissions`, and our response variable is `mean_child_mortality`.

```{r}

final_data_lm <- lm(mean_child_mortality ~ mean_emissions,
                    data = yearly_means)

tidy(final_data_lm)

```

## Fit?

```{r}

final_data_lm |> 
  augment() |> 
ggplot(aes(x = .fitted, y = .resid)) +
  geom_point()

```

The Adjusted R-squared was 0.9476 for the data indicating that close to 95% of the variability in mean child mortality can be explained by mean CO2 emissions. This indicates that the model is a very good fit for the data. The only issue is the plot of the residuals, since the residuals do not have a random distribution and seem to follow a pattern. This could indicate that the relationship between CO2 emissions and child mortality is non-linear and could lead to issues with other tests on the data.

```{r}

final_data_lm %>%
  augment() %>%
  summarise(
    response_variance = var(mean_child_mortality, na.rm = TRUE),
    fitted_variance = var(.fitted, na.rm = TRUE),
    residuals_variance = var(.resid, na.rm = TRUE)
  ) %>%
  pivot_longer(
    everything(),
    names_to = "Metric",
    values_to = "Variance"
  ) %>%
  mutate(
    Metric = case_when(
      Metric == "response_variance" ~ "Variance of Response",
      Metric == "fitted_variance" ~ "Variance of Fitted Values",
      Metric == "residuals_variance" ~ "Variance of Residuals",
      TRUE ~ Metric # Fallback, should not be needed
    )
  )

```

```{r}

predictions <- predict(final_data_lm)
st_error <- sigma(final_data_lm)

predictions %>%
  data.frame(predicted = .) %>%
  mutate(residuals = rnorm(n(), mean = 0, sd = st_error)) %>%
  ggplot(aes(x = predicted, y = residuals)) +
    geom_point()
```

## Simulation Function

```{r results='hide', message=FALSE, warning=FALSE}
noise <- function(x, mean = 0, sd) {
  return(x + rnorm(length(x),
            mean,
            sd)
         )
}

simulations <- map_dfc(.x = 1:1000,
                       .f = ~tibble(simulation = noise(predictions,
                                                       sd = st_error)
                                    )
                       )
```

```{r results='hide', message=FALSE, warning=FALSE}

colnames(simulations) <- colnames(simulations) |> 
  str_replace(pattern = "\\.\\.\\.",
                  replace = "_")

binded_simulations <- yearly_means |>
  filter(!is.na(mean_child_mortality),
         !is.na(mean_emissions)
         ) |>
  select(mean_child_mortality) |>
  bind_cols(simulations)

head(binded_simulations)

```

```{r warning=FALSE}

simulated_r_sq <- binded_simulations |>
  map(~ lm(mean_child_mortality ~ .x, data = binded_simulations)
      ) |>
  map(glance) |>
  map_dbl(~ .x$r.squared)

head(simulated_r_sq)

tibble(simulations = simulated_r_sq) |> 
  ggplot(aes(x = simulations)) + 
  geom_histogram(binwidth = 0.001, color = "black", fill = "skyblue") +
  labs(x = expression("Simulated"~ R^2),
       y = "",
       subtitle = "Number of Simulated Models") +
  theme_bw() +
  scale_y_continuous(breaks = seq(0,
                                  60,
                                  by = 2)
                     )
```

## References

Ranganathan et al., 2015 https://www.nature.com/articles/palcomms201533
